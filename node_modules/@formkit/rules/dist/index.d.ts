import { FormKitValidationRule } from '@formkit/validation';

/**
 * Determine if the given input's value was should be considered "accepted".
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const accepted: FormKitValidationRule;

/**
 * Determine if the given input's value is only alpha characters.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const alpha: FormKitValidationRule;

/**
 * Determine if the given input's value is only alpha characters.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const alpha_spaces: FormKitValidationRule;

/**
 * Determine if the given input's value is only alpha or numeric characters.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const alphanumeric: FormKitValidationRule;

/**
 * Determine if the given input's value is between two other values.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const between: FormKitValidationRule;

/**
 * Determine if the given input's value matches another input's value
 * @param context - The FormKitValidationContext
 * @public
 */
declare const confirm_2: FormKitValidationRule;
export { confirm_2 as confirm }

/**
 * Determine if the given input's value is after a given date.
 * Defaults to current time.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const date_after: FormKitValidationRule;

/**
 * Determine if the given input's value before a given date.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const date_before: FormKitValidationRule;

/**
 * Determine if the given input's value is between two other dates
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const date_between: FormKitValidationRule;

/**
 * Determine if the given input's value matches a specified date format
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const date_format: FormKitValidationRule;

/**
 * Determine if the given input's value is a plausible email address.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const email: FormKitValidationRule;

/**
 * Determine if the given input's value ends with a given string
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const ends_with: FormKitValidationRule;

/**
 * Determine if the given input's value is in a set of possible values.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const is: FormKitValidationRule;

/**
 * Determine if the given input's value length is full width.
 * @param context - The FormKitValidationContext
 * @public
 */
declare const length_2: FormKitValidationRule;
export { length_2 as length }

/**
 * Determine if the given input's value matches one or more values or regular expressions.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const matches: FormKitValidationRule;

/**
 * Determine if the given input's value is less than the maximum
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const max: FormKitValidationRule;

/**
 * Determine if the given input's value is less than a certain value.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const min: FormKitValidationRule;

/**
 * Determine if the given input's value is not in a given stack
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const not: FormKitValidationRule;

/**
 * Determine if the given input's value is numeric
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const number: FormKitValidationRule;

/**
 * Determine if the given input's value was required.
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const required: FormKitValidationRule;

/**
 * Determine if the given input's value starts with a substring
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const starts_with: FormKitValidationRule;

/**
 * Determine if the given input's value is an http url
 * @param context - The FormKitValidationContext
 * @public
 */
export declare const url: FormKitValidationRule;

export { }
